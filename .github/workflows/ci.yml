name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

permissions:
  contents: read
  security-events: write
  actions: write
  pull-requests: read

env:
  GO_VERSION: "1.24.4"

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          check-latest: true

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ env.GO_VERSION }}-
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: make deps

      - name: Run formatting check
        run: |
          make fmt
          git diff --exit-code

      - name: Run vet
        run: make vet

      - name: Run tests
        run: make test-coverage

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.out
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          check-latest: true

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ env.GO_VERSION }}-
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: make deps

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          args: --timeout=5m
  security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          check-latest: true      
      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ env.GO_VERSION }}-
            ${{ runner.os }}-go-
            
      - name: Download dependencies
        run: make deps
        
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@v0.17.0 # Using specific version for stability
        with:
          scan-type: "fs"
          scan-ref: "."
          format: "sarif"
          output: "trivy-results.sarif"
          severity: "CRITICAL,HIGH,MEDIUM" # Include MEDIUM to have more data
          exit-code: "1" # Fail on vulnerabilities found
          ignore-unfixed: false
          timeout: "10m"
          
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: "trivy-results.sarif"
          category: "trivy" # Important for proper categorization
          wait-for-processing: true
          
      - name: Debug SARIF file
        run: |
          echo "SARIF file details:"
          ls -la trivy-results.sarif
          if [ -f "trivy-results.sarif" ]; then
            echo "SARIF file size: $(wc -c < trivy-results.sarif) bytes"
            echo "SARIF file first lines:"
            head -20 trivy-results.sarif
          else
            echo "SARIF file not found!"
          fi
  build:
    runs-on: ubuntu-latest
    needs: [test, lint, security]
    if: ${{ !cancelled() && !failure() }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          check-latest: true

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ env.GO_VERSION }}-
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: make deps

      - name: Build binary
        run: make build

      - name: Verify binary exists
        run: |
          ls -la bin/
          ./bin/kubectl-go-mcp-server --help || echo "Binary help not available, but binary exists"

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: kubectl-go-mcp-server-${{ github.sha }}
          path: bin/kubectl-go-mcp-server
          retention-days: 30
